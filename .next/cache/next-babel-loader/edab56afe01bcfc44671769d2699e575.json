{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dennismercado/Desktop/Tutorials Projects/nextjs-tutorial/src/pages/robots.js\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Robots = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Robots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.robots !== undefined ? props.robots.map(robot => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: robot.name\n        }, robot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 43\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Robots;\n\nRobots.getInitialProps = async function () {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n  const data = await res.json();\n  return {\n    robots: data\n  };\n};\n\nexport default Robots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Robots\");","map":{"version":3,"sources":["/Users/dennismercado/Desktop/Tutorials Projects/nextjs-tutorial/src/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","undefined","map","robot","name","id","getInitialProps","res","data","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA,kBACGA,KAAK,CAACC,MAAN,KAAiBC,SAAjB,GACGF,KAAK,CAACC,MAAN,CAAaE,GAAb,CAAkBC,KAAD,iBAAW;AAAA,oBAAoBA,KAAK,CAACC;AAA1B,WAASD,KAAK,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,gBAA5B,CADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD,CAhBD;;KAAMP,M;;AAkBNA,MAAM,CAACQ,eAAP,GAAyB,kBAAkB;AACzC,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,4CAAD,CAAvB;AAEA,QAAMW,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,SAAO;AACLT,IAAAA,MAAM,EAAEQ;AADH,GAAP;AAGD,CAPD;;AASA,eAAeV,MAAf","sourcesContent":["import Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Robots = (props) => {\n  return (\n    <>\n      <div>\n        <h1>Robots</h1>\n        <Link href=\"/\">\n          <button>Home</button>\n        </Link>\n        <div>\n          {props.robots !== undefined\n            ? props.robots.map((robot) => <li key={robot.id}>{robot.name}</li>)\n            : null}\n        </div>\n      </div>\n    </>\n  );\n};\n\nRobots.getInitialProps = async function () {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n\n  const data = await res.json();\n  return {\n    robots: data,\n  };\n};\n\nexport default Robots;\n"]},"metadata":{},"sourceType":"module"}